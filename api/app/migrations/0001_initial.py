# Generated by Django 3.2 on 2022-01-19 22:20

import app.scrap
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('1', 'ADMIN'), ('2', 'DOCENTE'), ('3', 'ESTUDIANTE')], default='1', max_length=20)),
                ('first_name', models.CharField(max_length=30, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=30, verbose_name='Ap. Paterno')),
                ('sur_name', models.CharField(blank=True, max_length=30, verbose_name='Ap. Materno')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_administrador', models.CharField(blank=True, max_length=15, null=True, verbose_name='Codigo Administrador')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('user_type', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Tipo usuario')),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='aula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_aula', models.CharField(blank=True, max_length=10, null=True, verbose_name='Codigo de aula')),
                ('sillas_fijas', models.PositiveIntegerField(default=0, verbose_name='Nro. de sillas fijas')),
                ('sillas_moviles', models.PositiveIntegerField(default=0, verbose_name='Nro. de sillas moviles')),
                ('nro_salon', models.CharField(blank=True, max_length=10, null=True, verbose_name='Nro. de Salon')),
                ('tipo_aula', models.CharField(blank=True, choices=[('TALLER', 'Taller'), ('LABO', 'Laboratorio'), ('TEORIA', 'Teoria')], max_length=20, null=True, verbose_name='Tipo de Aula')),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidad')),
                ('piso', models.PositiveIntegerField(blank=True, null=True, verbose_name='Piso')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='balota_preguntas_curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('texto_pregunta', models.TextField(verbose_name='Pregunta')),
                ('img_pregunta', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Imagen')),
            ],
            options={
                'verbose_name': 'Preguntas de balotario',
                'verbose_name_plural': 'Balotario',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('activo', models.BooleanField(default=True, verbose_name='Estado Activo')),
                ('denominacion', models.CharField(max_length=100, verbose_name='Denominacion Ciclo')),
                ('anio', models.PositiveIntegerField(verbose_name='Año')),
                ('nro_ciclo_de_anio', models.PositiveSmallIntegerField(verbose_name='Nro. Ciclo')),
                ('requisitos', models.TextField(blank=True, null=True, verbose_name='Requisitos')),
                ('caja_mensaje', models.TextField(blank=True, null=True, verbose_name='Mensaje')),
                ('fecha_inicio_ciclo', models.DateField(null=True, verbose_name='Fecha inicio')),
                ('fecha_fin_ciclo', models.DateField(null=True, verbose_name='Fecha Culminacion')),
                ('fecha_inicio_preinscripcion', models.DateField(null=True, verbose_name='Fecha inicio preinscripcion')),
                ('fecha_fin_preinscripcion', models.DateField(null=True, verbose_name='Fecha final preinscripcion')),
                ('fecha_inicio_inscripcion', models.DateField(null=True, verbose_name='Fecha inicio inscripcion')),
                ('fecha_fin_inscripcion', models.DateField(null=True, verbose_name='Fecha final inscripcion')),
                ('org_unit_path', models.CharField(blank=True, max_length=100, null=True, verbose_name='Org Unit Path')),
                ('estado_publicar', models.BooleanField(default=False, verbose_name='Publicar')),
                ('portada_ciclo', models.FileField(blank=True, null=True, upload_to='caratulas-ciclo', verbose_name='Portada')),
                ('id_administrador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.administrador')),
            ],
            options={
                'verbose_name': 'Ciclo',
                'verbose_name_plural': 'Ciclos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='colegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nombre_colegio', models.CharField(max_length=180, verbose_name='Nombre')),
                ('codigo_modular', models.CharField(max_length=10, null=True, unique=True, verbose_name='Codigo modular')),
                ('direccion_colegio', models.CharField(max_length=200, null=True, verbose_name='Direccion')),
                ('ubigeo_nombre', models.CharField(max_length=200, null=True, verbose_name='Nombre ubigeo')),
                ('tipo_colegio', models.CharField(choices=[('PU', 'PUBLICO'), ('PR', 'PRIVADO')], max_length=2, verbose_name='Tipo Colegio')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='compromiso_pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('fecha_vencimiento', models.DateField(null=True, verbose_name='Fecha vencimiento')),
            ],
            options={
                'verbose_name': 'Compromiso de Pago',
                'verbose_name_plural': 'Compromisos de Pagos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='detalle_compromiso_de_pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_compromiso_pago', models.CharField(max_length=50, verbose_name='Codigo de pago')),
                ('numero_cuota', models.PositiveIntegerField(verbose_name='Nro. Cuota')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto a pagar')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha limite')),
                ('esta_pagado', models.BooleanField(verbose_name='Pagado')),
                ('monto_mora', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Mora')),
                ('fecha_pagado', models.DateField(blank=True, null=True, verbose_name='Fecha de pago')),
                ('modalidad_pago', models.CharField(blank=True, max_length=40, null=True, verbose_name='Medio de pago')),
                ('id_compromiso_pago', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.compromiso_pago')),
            ],
            options={
                'verbose_name': 'Detalle Compromiso Pago',
                'verbose_name_plural': 'Detalles Compromisos de Pago',
                'ordering': ['id'],
                'unique_together': {('id_compromiso_pago', 'numero_cuota')},
            },
        ),
        migrations.CreateModel(
            name='docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('estado_Activo', models.BooleanField(default=True, verbose_name='Estado activo')),
                ('codigo_docente', models.CharField(blank=True, max_length=20, null=True, verbose_name='Codigo Docente')),
                ('regimen_docente', models.CharField(blank=True, choices=[('P', 'Principal'), ('L', 'Locador'), ('A', 'Auxiliar'), ('C', 'Contratado')], max_length=3, null=True, verbose_name='Categoria Docente')),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='documentos_inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nombre_documento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre')),
                ('documento', models.FileField(blank=True, null=True, upload_to=app.scrap.path_inscripcion, verbose_name='Documentos')),
                ('esta_aprobado', models.SmallIntegerField(blank=True, choices=[(0, 'Pendiente'), (1, 'Aprobado'), (2, 'Observado')], default=0, null=True, verbose_name='Estado de aprobado')),
                ('observaciones', models.CharField(blank=True, max_length=200, null=True, verbose_name='Observaciones')),
                ('id_administrador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.administrador')),
            ],
            options={
                'verbose_name_plural': 'Documentos de Inscripcion',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='escuela_profesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_escuela', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Codigo')),
                ('nombre_escuela_profesional', models.CharField(max_length=40, verbose_name='Nombre')),
                ('abreviacion', models.CharField(blank=True, max_length=10, null=True, verbose_name='Abreviacion')),
                ('descripcion', models.TextField(blank=True, max_length=200, null=True, verbose_name='Descripcion')),
            ],
            options={
                'verbose_name': 'Escuela Profesional',
                'verbose_name_plural': 'Escuelas Profesionales',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('tema_personalizado', models.PositiveIntegerField(default=1, verbose_name='Tema personalizado')),
                ('id_aula', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.aula')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('fecha_examen', models.DateField(verbose_name='Fecha')),
                ('denominacion_examen', models.CharField(max_length=50, verbose_name='Denominacion')),
                ('tipo_examen', models.CharField(choices=[('PARCIAL', 'Parcial'), ('SIMULACRO', 'Simulacro')], max_length=20, verbose_name='Tipo de examen')),
                ('nro_examen', models.PositiveIntegerField(verbose_name='Nro. de examen')),
                ('hora_inicio', models.TimeField(verbose_name='Hora Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora Final')),
            ],
            options={
                'verbose_name': 'Examen',
                'verbose_name_plural': 'Examenes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='examen_estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nota_promedio', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=5, null=True, verbose_name='Nota Promedio')),
                ('id_estudiante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.estudiante')),
                ('id_examen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.examen')),
            ],
            options={
                'verbose_name': 'Notas Estudiante',
                'verbose_name_plural': 'Notas Estudiantes',
                'ordering': ['id'],
                'unique_together': {('id_examen', 'id_estudiante')},
            },
        ),
        migrations.CreateModel(
            name='examen_grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('finalizado', models.BooleanField(blank=True, default=False, null=True)),
                ('id_examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.examen')),
            ],
            options={
                'verbose_name': 'Examen por grupo',
                'verbose_name_plural': 'Examenes por grupo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='grupo_academico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('denominacion', models.CharField(max_length=40, verbose_name='Denominacion')),
                ('abreviacion', models.CharField(max_length=10, verbose_name='Abreviacion')),
                ('descripcion', models.TextField(blank=True, max_length=200, verbose_name='Descripcion')),
            ],
            options={
                'verbose_name': 'Grupo Academico',
                'verbose_name_plural': 'Grupos Academicos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('enlace_meet', models.URLField(blank=True, null=True, verbose_name='Enlace de sala virtual')),
                ('id_aula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.aula')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ciclo')),
                ('id_docente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.docente')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='padron_curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nombre_curso', models.CharField(max_length=50, verbose_name='Nombre del Curso')),
                ('abreviacion', models.CharField(max_length=10, verbose_name='Abreviacion')),
                ('descripcion', models.TextField(blank=True, max_length=100, verbose_name='Descripcion')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Padron de Cursos',
                'verbose_name_plural': 'Padron de Cursos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='padron_documento_requisito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado activo')),
                ('nombre_documento', models.CharField(max_length=150, null=True, verbose_name='Nombre del documento')),
                ('descripcion', models.TextField(blank=True, max_length=100, null=True, verbose_name='Descripcion de requisito')),
                ('documento', models.FileField(blank=True, null=True, upload_to='docrequisitos', verbose_name='Subir documento')),
            ],
            options={
                'verbose_name': 'Padron de Requisito Inscripcion',
                'verbose_name_plural': 'Padron de Requisitos Inscripcion',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nro_cuotas', models.PositiveIntegerField(verbose_name='Nro. de cuota(s)')),
                ('tipo_colegio', models.CharField(choices=[('PR', 'Privado'), ('PU', 'Publico')], max_length=10, verbose_name='Tipo de Colegio')),
                ('monto_total', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Monto Total')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ciclo')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['id'],
                'unique_together': {('id', 'id_ciclo')},
            },
        ),
        migrations.CreateModel(
            name='persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('dni', models.CharField(max_length=8, unique=True, verbose_name='DNI')),
                ('nombres', models.CharField(max_length=50, verbose_name='Nombres')),
                ('apellido_paterno', models.CharField(max_length=50, verbose_name='Ap. Paterno')),
                ('apellido_materno', models.CharField(max_length=50, verbose_name='Ap. Materno')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=5, verbose_name='Sexo')),
                ('fecha_nacimiento', models.DateField(null=True, verbose_name='Fecha de Nacimiento')),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='preguntas_examen_grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('id_balota_curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.balota_preguntas_curso')),
                ('id_examen_grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.examen_grupo')),
            ],
            options={
                'verbose_name': 'Pregunta examen',
                'verbose_name_plural': 'Preguntas examen',
                'unique_together': {('id_examen_grupo', 'id_balota_curso')},
            },
        ),
        migrations.CreateModel(
            name='tabla_configuraciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validacion_telefono', models.BooleanField(verbose_name='Validar telefono')),
                ('validacion_email', models.BooleanField(verbose_name='Validar email')),
                ('fuente_datos_persona', models.CharField(choices=[('PIDE', 'Datos PIDE'), ('BDD', 'Base de datos local')], max_length=10, verbose_name='Importar desde')),
                ('mostrar_enlace_tesoreria', models.BooleanField(verbose_name='Monstrar enlace a tesoreria en Incripcion')),
                ('URL_tesoreria', models.URLField(verbose_name='Enlace a Tesoreria')),
                ('direccion_pago_fisico', models.CharField(max_length=200, null=True, verbose_name='Direccion de caja')),
                ('mostrar_pago_fisico', models.BooleanField(default=True, null=True, verbose_name='Mostrar pago fisico')),
                ('mostrar_pago_virtual', models.BooleanField(default=True, null=True, verbose_name='Mostrar pago virtual')),
            ],
            options={
                'verbose_name': 'Configuracion',
                'verbose_name_plural': 'Configuraciones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ubigeo',
            fields=[
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_ubigeo', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True, verbose_name='Codigo Ubigeo')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre')),
                ('tipo_ubigeo', models.CharField(max_length=1, verbose_name='Tipo Ubigeo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('denominacion_sede', models.CharField(max_length=50, verbose_name='Denominacion')),
                ('telefono', models.CharField(blank=True, max_length=50, verbose_name='Telefono')),
                ('direccion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Direccion')),
                ('id_ubigeo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ubigeo')),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='resultados_examen_estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('letra_respuesta', models.CharField(max_length=10, verbose_name='Letra de respuesta')),
                ('estado_respuesta', models.BooleanField(verbose_name='Estado de respuesta')),
                ('id_examen_estudiante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.examen_estudiante')),
                ('id_preguntas_examen_grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.preguntas_examen_grupo')),
            ],
            options={
                'verbose_name': 'Resultado examen estudiante',
                'verbose_name_plural': 'Resultados examen estudiante',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='registro_tesoreria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('esta_pagado', models.BooleanField(default=False, verbose_name='Esta pagado')),
                ('modalidad_pago', models.CharField(blank=True, max_length=40, null=True, verbose_name='Modalidad de pago')),
                ('fecha_pago', models.DateField(null=True, verbose_name='Fecha de pago')),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.administrador')),
                ('id_detalle_compromiso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.detalle_compromiso_de_pago')),
            ],
            options={
                'verbose_name_plural': 'Compromisos de pago tesoreria',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='preinscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado Activo')),
                ('idioma', models.CharField(choices=[('ES', 'ESPAÑOL'), ('BO', 'BORA'), ('MA', 'MATSIGENKA'), ('SK', 'SHIPIBO-KONIBO'), ('IN', 'INGLES')], max_length=30, null=True, verbose_name='Idioma')),
                ('progreso_preinscripcion', models.SmallIntegerField(default=1, null=True, verbose_name='Progreso Preinscripcion')),
                ('direccion', models.CharField(max_length=120, null=True, verbose_name='Direccion')),
                ('esta_enviado', models.BooleanField(default=False, null=True, verbose_name='Enviado')),
                ('telefono_personal', models.CharField(max_length=15, null=True, verbose_name='Telefono')),
                ('email_respaldo', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo de contacto')),
                ('nombres_apoderado', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del apoderado')),
                ('telefono_apoderado', models.CharField(blank=True, max_length=12, null=True, verbose_name='Telefono del apoderado')),
                ('condicion_discapacidad', models.BooleanField(default=False, verbose_name='Discapacidad')),
                ('detalle_discapacidad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Especifique su discapacidad')),
                ('es_extranjero', models.BooleanField(default=False, verbose_name='Es extranjero')),
                ('anio_egreso', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año de egreso')),
                ('dni_persona', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.persona')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ciclo')),
                ('id_colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.colegio')),
                ('id_escuela_profesional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.escuela_profesional')),
                ('id_pago', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.pago')),
                ('id_ubigeo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.ubigeo', verbose_name='Lugar actual de residencia')),
            ],
            options={
                'verbose_name': 'Preinscripcion',
                'verbose_name_plural': 'Preinscripciones',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='persona',
            name='lugar_nacimiento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.ubigeo', verbose_name='Lugar de nacimiento'),
        ),
        migrations.CreateModel(
            name='padron_cursos_grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('hora_semana', models.PositiveIntegerField(verbose_name='Horas a la semana')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado activo')),
                ('nro_preguntas_examen', models.PositiveIntegerField(blank=True, null=True, verbose_name='Preguntas para examen')),
                ('id_grupo_academico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.grupo_academico')),
                ('id_padron_curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.padron_curso')),
            ],
            options={
                'verbose_name': 'Padron cursos por grupo',
                'verbose_name_plural': 'Padron cursos por grupo',
                'ordering': ['id'],
                'unique_together': {('id_padron_curso', 'id_grupo_academico')},
            },
        ),
        migrations.CreateModel(
            name='pabellon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('codigo_pabellon', models.CharField(blank=True, max_length=10, null=True, verbose_name='Codigo pabellon')),
                ('nombre_pabellon', models.CharField(max_length=50, verbose_name='Denominacion')),
                ('numero_pisos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Nro. de Pisos')),
                ('id_sede', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.sede')),
            ],
            options={
                'verbose_name': 'Pabellon',
                'verbose_name_plural': 'Pabellones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='material_curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('descripcion_material', models.TextField(verbose_name='Descripcion')),
                ('enlace_recurso', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('archivo_adjunto', models.FileField(blank=True, null=True, upload_to=app.scrap.path_material_curso, verbose_name='Archivo')),
                ('tipo_recurso', models.CharField(choices=[('AVISO', 'AVISO'), ('RECURSO', 'RECURSO')], max_length=10, verbose_name='Tipo')),
                ('id_horario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.horario')),
            ],
            options={
                'verbose_name': 'Material de clase',
                'verbose_name_plural': 'Materiales de clase',
                'ordering': ('-fecha_registro',),
            },
        ),
        migrations.CreateModel(
            name='inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('estado_finalizado', models.BooleanField(default=False, verbose_name='Finalizado')),
                ('id_compromiso_pago', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app.compromiso_pago')),
            ],
            options={
                'verbose_name': 'Inscripcion',
                'verbose_name_plural': 'Inscripciones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='horario_curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('dia_dictado', models.CharField(choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miercoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes'), ('SAB', 'Sabado'), ('DOM', 'Domingo')], max_length=15)),
                ('hora_inicio', models.TimeField(verbose_name='Hora Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora Fin')),
                ('id_horario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.horario')),
            ],
            options={
                'verbose_name': 'Detalle Horario Curso',
                'verbose_name_plural': 'Detalle Horario Cursos',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='horario',
            name='id_padron_cursos_grupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.padron_cursos_grupo'),
        ),
        migrations.CreateModel(
            name='examenCiclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ciclo')),
                ('id_examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.examen')),
            ],
            options={
                'verbose_name': 'Examen ciclo',
                'verbose_name_plural': 'Examenes ciclo',
            },
        ),
        migrations.AddField(
            model_name='examen_grupo',
            name='id_grupo_academico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.grupo_academico'),
        ),
        migrations.CreateModel(
            name='estudiante_notas_por_curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('notas_curso', models.DecimalField(decimal_places=3, max_digits=5, verbose_name='Nota')),
                ('id_examen_estudiante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.examen_estudiante')),
                ('id_padron_curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.padron_cursos_grupo')),
            ],
            options={
                'verbose_name': 'Notas Estudiante Por Curso',
                'verbose_name_plural': 'Notas Estudiantes Por Curso',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='estudiante_horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('id_estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.estudiante')),
                ('id_horario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.horario')),
            ],
            options={
                'verbose_name': 'Horario de estudiante',
                'verbose_name_plural': 'Horarios de estudiante',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='estudiante',
            name='id_inscripcion',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app.inscripcion'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='user_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='escuela_profesional',
            name='id_grupo_academico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.grupo_academico'),
        ),
        migrations.CreateModel(
            name='documentos_inscripcion_revision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('esta_aprobado', models.BooleanField(default=False, verbose_name='Estado de aprovado')),
                ('id_administrador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.administrador')),
                ('id_documento_inscripcion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.documentos_inscripcion')),
            ],
            options={
                'verbose_name': 'Documento de Inscripcion - Revision',
                'verbose_name_plural': 'Documentos de Inscripcion - Revision',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='documentos_inscripcion',
            name='id_inscripcion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.inscripcion'),
        ),
        migrations.CreateModel(
            name='documento_publicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('descripcion', models.TextField(blank=True, max_length=100, verbose_name='Descripcion')),
                ('nombre_documento', models.CharField(max_length=100, null=True, verbose_name='Nombre del archivo')),
                ('archivo', models.FileField(null=True, upload_to='', verbose_name='Archivo')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ciclo')),
            ],
            options={
                'verbose_name': 'Documento de Publicacion',
                'verbose_name_plural': 'Documentos de Publicacion',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='docente',
            name='id_curso',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.padron_curso', verbose_name='Curso a dictar'),
        ),
        migrations.AddField(
            model_name='docente',
            name='user_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Tipo de usuario'),
        ),
        migrations.CreateModel(
            name='detalle_pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('nro_cuota', models.PositiveIntegerField(verbose_name='Nro. de cuota')),
                ('monto_parcial', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Parcial')),
                ('especie_mora', models.CharField(choices=[('PORC', 'Porcentaje (%)'), ('FIJO', 'Monto fijo')], max_length=50, null=True, verbose_name='Tipo de mora')),
                ('monto_mora', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Valor')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha Final')),
                ('id_pago', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.pago')),
            ],
            options={
                'verbose_name': 'Detalle Pago',
                'verbose_name_plural': 'Detalle Pagos',
                'ordering': ['nro_cuota'],
            },
        ),
        migrations.AddField(
            model_name='compromiso_pago',
            name='id_pago',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.pago'),
        ),
        migrations.AddField(
            model_name='compromiso_pago',
            name='id_preinscripcion',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app.preinscripcion'),
        ),
        migrations.CreateModel(
            name='comentarios_clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('texto_comentario', models.TextField(verbose_name='Comentario')),
                ('archivo_adjunto', models.FileField(blank=True, null=True, upload_to=app.scrap.path_comentarios_curso, verbose_name='Archivo adjunto')),
                ('id_docente', models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.docente')),
                ('id_estudiante', models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.estudiante')),
                ('id_horario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.horario')),
            ],
            options={
                'verbose_name': 'Comentario de clase',
                'verbose_name_plural': 'Comentarios de clase',
                'ordering': ('-fecha_registro',),
            },
        ),
        migrations.AddField(
            model_name='colegio',
            name='id_ubigeo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.ubigeo'),
        ),
        migrations.AddField(
            model_name='balota_preguntas_curso',
            name='id_docente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.docente'),
        ),
        migrations.AddField(
            model_name='balota_preguntas_curso',
            name='id_padron_curso_grupo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.padron_cursos_grupo'),
        ),
        migrations.AddField(
            model_name='aula',
            name='id_pabellon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.pabellon'),
        ),
        migrations.CreateModel(
            name='asistencia_estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('fecha_sesion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha sesion')),
                ('estado_asistencia', models.BooleanField(default=False)),
                ('observacion', models.CharField(blank=True, max_length=500, null=True, verbose_name='observacion')),
                ('id_estudiante_horario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.estudiante_horario')),
            ],
            options={
                'verbose_name': 'Asistencia Estudiante',
                'verbose_name_plural': 'Asistencias Estudiante',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='asistencia_docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('fecha_sesion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha registro')),
                ('estado_asistencia', models.BooleanField(default=False, verbose_name='estado asistencia')),
                ('id_horario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.horario')),
            ],
            options={
                'verbose_name': 'Asistencia Docente',
                'verbose_name_plural': 'Asistencias Docente',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='alternativas_balotario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('texto_alternativa', models.TextField(verbose_name='Alternativa')),
                ('es_respuesta', models.BooleanField(verbose_name='Respuesta')),
                ('id_balota', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.balota_preguntas_curso')),
            ],
            options={
                'verbose_name': 'Alternativas',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='documento_solicitado_ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('id_ciclo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ciclo')),
                ('id_padron_documento_requisito', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.padron_documento_requisito')),
            ],
            options={
                'verbose_name': 'Documento Solicitado Inscripcion',
                'verbose_name_plural': 'Documentos Solicitado Inscripcion',
                'ordering': ['id'],
                'unique_together': {('id_padron_documento_requisito', 'id_ciclo')},
            },
        ),
    ]
